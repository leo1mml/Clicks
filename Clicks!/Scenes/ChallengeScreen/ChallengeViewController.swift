//
//  ChallengeViewController.swift
//  Clicks!
//
//  Created by Leonel Menezes on 07/10/18.
//  Copyright (c) 2018 Leonel Menezes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ChallengeDisplayLogic: class
{
    //  func displaySomething(viewModel: Challenge.Something.ViewModel)
}

class ChallengeViewController: UICollectionViewController, ChallengeDisplayLogic
{
    
    // MARK: - Delegates
    var interactor: ChallengeBusinessLogic?
    var router: (NSObjectProtocol & ChallengeRoutingLogic & ChallengeDataPassing)?
    
    // MARK: - UI Items
    private var viewModel : ChallengeScreen.ChallengeData.ViewModel
    
    // MARK: Object lifecycle
    
    init(initialViewModel: ChallengeScreen.ChallengeData.ViewModel){
        self.viewModel = initialViewModel
        super.init(collectionViewLayout: UICollectionViewLayout())
    }
    
    required init?(coder aDecoder: NSCoder) {
        return nil
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = ChallengeInteractor()
        let presenter = ChallengePresenter()
        let router = ChallengeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        //    doSomething()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    //  func doSomething()
    //  {
    //    let request = Challenge.Something.Request()
    ////    interactor?.doSomething(request: request)
    //  }
    
    //  func displaySomething(viewModel: Challenge.Something.ViewModel)
    //  {
    //    //nameTextField.text = viewModel.name
    //  }
}

