//
//  HomeModels.swift
//  Clicks!
//
//  Created by Leonel Menezes on 24/05/2018.
//  Copyright (c) 2018 Leonel Menezes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum Home
{
  // MARK: Use cases
    
    ///Use case which you have to get the open challenges for the user
    enum GetOpenChallenges {
        struct Request {
            ///API SECRET - secret to access the server api
            var apiSecret: String
            ///Number of challenges you wish to get from the server
            var numberOfChallenges: Int
        }
        struct Response {
            ///The opened challenges from the database
            var openChallenges: [Challenge]
        }
        struct ViewModel {
            ///The challenge structure to be shown in the collection
            struct DisplayedChallenge {
                var coverPhotoUrl: String
                var timeLeft: String
                var theme: String
                var isInVotationPeriod: Bool
                var numberOfPhotos: Int
            }
            ///Challenges array to be shown in the collection
            var challenges: [DisplayedChallenge]
        }
    }
    
    ///Use case which you have to get the last challenge winners
    enum GetLastWinners {
        struct Request {
            ///API SECRET - secret to access the server api
            var apiSecret: String
            ///Number of winners you wish to get from the server
            var numberOfWinners: Int
        }
        struct Response {
            var challenges: [Challenge]
        }
        struct ViewModel {
            struct DisplayedWinner {
                ///Profile Photo url of the winner
                var profilePhoto : String
                ///Challenge winner photo url of the challenge
                var winnerPhoto : String
                ///Winner profile Name
                var winnerProfileName : String
            }
            ///Collection of winners to be shown
            var lastWinners : [DisplayedWinner]
        }
    }
    ///Use case which you have to get the incoming challenges
    enum GetNextChallenges {
        struct Request {
            ///API SECRET - secret to access the server api
            var apiSecret: String
            ///Number of winners you wish to get from the server
            var numberOfChallenges: Int
        }
        struct Response {
            var challenges: [Challenge]
        }
        struct ViewModel {
            struct DisplayedChallenge {
                ///Theme of the challenge
                var theme: String
                ///Challenge cover image url
                var coverImageUrl: String
                ///Challenge start date
                var challengeStartDate: String
            }
            ///Collection of challenges coming soon
            var nextChallenges: [Challenge]
        }
    }
    
  
//  enum Something
//  {
//    struct Request
//    {
//    }
//    struct Response
//    {
//    }
//    struct ViewModel
//    {
//    }
//  }
}
