//
//  MainScreenViewController.swift
//  Clicks!
//
//  Created by Leonel Menezes on 12/06/2018.
//  Copyright (c) 2018 Leonel Menezes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainScreenDisplayLogic: class
{
    func displaySomething(viewModel: MainScreen.Something.ViewModel)
}

class MainScreenView: UICollectionViewCell, MainScreenDisplayLogic
{
    
    // MARK: - Variables
    
    //Delegates
    
    var interactor: MainScreenBusinessLogic?
    var router: (NSObjectProtocol & MainScreenRoutingLogic & MainScreenDataPassing)?
    
    //Commom variables
    private let componentCellId = "ComponentCell"
    
    //Screen Items
    
    ///Table view to store the current challenges, last winners and next challenges
    var containerTableView : UITableView = {
        let tableView = UITableView()
        tableView.translatesAutoresizingMaskIntoConstraints = false
        tableView.backgroundColor = AppColors.clearblack.color
        return tableView
    }()
    
    // MARK: Object lifecycle
    
    override init(frame: CGRect)
    {
        super.init(frame: frame)
        setupTableView()
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        self.backgroundColor = AppColors.darkwhite.color
        let viewController = self
        let interactor = MainScreenInteractor()
        let presenter = MainScreenPresenter()
        let router = MainScreenRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.view = viewController
        router.dataStore = interactor
    }
    
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doSomething()
    {
        let request = MainScreen.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: MainScreen.Something.ViewModel)
    {
        //nameTextField.text = viewModel.name
    }
    
    //MARK: - Configure View
    
    ///Set up the initial configurations for the container table view
    func setupTableView() {
        self.containerTableView.frame = self.frame
        self.addSubview(self.containerTableView)
    }
}

